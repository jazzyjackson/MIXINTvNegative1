
* {
  font-family: monospace;
  margin: 0;
}

:host {
  position: relative !important; /* pierce shadowroot what? */
  display: flex;
  flex-direction: column;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: white;
  display: flex;
}



:host(:focus){
  outline: none;
}

:host-context([hideHeader]) header {
  display: none;
}

header {
  padding: 3px;
}

textarea {
  display: none;
}

data-shell {
  overflow: auto; 
  display: flex; 
  flex-direction: column;
  padding: 5px;
  white-space: pre-wrap;
}

data-stderr, data-error{
  color: red;
}
ongoing-bar {
  display: block;
  height: 4px;
  position: relative;
}

required-params::before {
  content: 'Required Parameters'
}
optional-params::before {
  content: 'Optional Parameters'
}

param-form {
  display: flex;
  flex-flow: column;
  border: 1px solid black;
  margin: 5px;
  padding: 5px;
}

param-form::after {
  /* Follow forms with a description of what they're for */
  content: attr(desc);
}

input {
  display: block;
}

form {
  margin: 0 0px 2px 5px;  
  padding: 5px;
  display: none;
  flex: 10;
}
/* If host shellblock has a required attribute, reveal the form */
:host-context([required]) form {
  display: block;
}

strong {
  cursor: pointer;
}



/* show 'ongoing' animation as long as there is no exit code, exit signal, or error number indicating that the process is over */
:host(:not([exit-code]):not([exit-signal]):not([error])) ongoing-bar {
  animation: progress 1.5s infinite cubic-bezier(0.4, 0, 1, 1);
  background: linear-gradient(to right, white 0%, transparent 20%, transparent 80%, white 100%),
              linear-gradient(to top, white, cornflowerblue, white); 
}

@keyframes progress {
    0% {
      left: 0%;
      width: 0%;
    }
    50% {
      left: 0%;
      width: 100%;
    }
    100% {
      left: 100%;
      width: 0%;
    }
  }
  